"""
–¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–æ–≤—É—é –ª–æ–≥–∏–∫—É –±–µ–∑ –ø–æ–∫–∞–∑–∞ –¥–ª–∏–Ω–Ω–æ–≥–æ –∫–æ–¥–∞ –∏ —Å –∞–≤—Ç–æ–∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º
"""

from creative_naming import CreativeNamingSystem

def test_improved_system():
    """–¢–µ—Å—Ç–∏—Ä—É—É–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É"""
    print("üß™ –¢–ï–°–¢ –£–õ–£–ß–®–ï–ù–ù–û–ô –°–ò–°–¢–ï–ú–´ –®–ò–§–†–û–í–ê–ù–ò–Ø")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º—É (–±–µ–∑ –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∞)
    system = CreativeNamingSystem(save_to_file=False)
    
    print("1Ô∏è‚É£ –¢–ï–°–¢: –ö–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–ª–æ–≤")
    result = system.encode_creative_name("GR_plinko_timer_nekittopchik_1", 2)
    if 'error' not in result:
        print(f"‚úÖ GR_plinko_timer_nekittopchik_1 -> {result['external']}")
        print(f"   (–≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫–æ–¥ —Å–∫—Ä—ã—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)")
    
    print("\n2Ô∏è‚É£ –¢–ï–°–¢: –ö–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –Ω–æ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ (–∞–≤—Ç–æ—Å–æ–∑–¥–∞–Ω–∏–µ)")
    result = system.encode_creative_name("FR_plinka_watafak_ogo_1", 3) 
    if 'error' not in result:
        print(f"‚úÖ FR_plinka_watafak_ogo_1 -> {result['external']}")
        external_code = result['external']
    
    print("\n3Ô∏è‚É£ –¢–ï–°–¢: –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ")
    decode_result = system.decode_creative_name(external_code)
    if decode_result['success']:
        print(f"‚úÖ {external_code} -> {decode_result['decoded_name']}")
        print(f"   –ú–µ—Ç–æ–¥: {decode_result.get('method', 'unknown')}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏: {decode_result.get('error')}")
    
    print("\n4Ô∏è‚É£ –¢–ï–°–¢: –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .mp4")
    mp4_code = external_code + ".mp4"
    decode_result_mp4 = system.decode_creative_name(mp4_code)
    if decode_result_mp4['success']:
        print(f"‚úÖ {mp4_code} -> {decode_result_mp4['decoded_name']}")
        print(f"   –ú–µ—Ç–æ–¥: {decode_result_mp4.get('method', 'unknown')}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏: {decode_result_mp4.get('error')}")
    
    print("\n5Ô∏è‚É£ –¢–ï–°–¢: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ª–æ–≤–∞—Ä—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π")
    mappings = system.code_to_name
    print(f"üìö –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π: {len(mappings)}")
    for code, name in mappings.items():
        print(f"   {code} -> {name}")
    
    print("\n6Ô∏è‚É£ –¢–ï–°–¢: –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≥–æ –∂–µ –Ω–∞–∑–≤–∞–Ω–∏—è")
    result2 = system.encode_creative_name("FR_plinka_watafak_ogo_1", 3)
    if 'error' not in result2:
        print(f"‚úÖ FR_plinka_watafak_ogo_1 -> {result2['external']}")
        if result2['external'] == result['external']:
            print("   ‚úÖ –ö–æ–¥ –æ—Å—Ç–∞–ª—Å—è —Ç–µ–º –∂–µ (—Å–∏—Å—Ç–µ–º–∞ –∑–∞–ø–æ–º–Ω–∏–ª–∞)")
        else:
            print("   ‚ö†Ô∏è –ö–æ–¥ –∏–∑–º–µ–Ω–∏–ª—Å—è (–Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ)")
    
    print("\n" + "=" * 50)
    print("üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –ø–æ–∫–∞–∑–∞ –¥–ª–∏–Ω–Ω–æ–≥–æ –∫–æ–¥–∞")
    print("üß† –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ—Ç –∫–æ–¥—ã –¥–ª—è –Ω–æ–≤—ã—Ö —Å–ª–æ–≤") 
    print("üíæ –ó–∞–ø–æ–º–∏–Ω–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–π —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏")
    print("üîß –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å .mp4 –∏ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è")

def test_scenario_from_screenshot():
    """–¢–µ—Å—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è –∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞"""
    print("\n\nüì∏ –í–û–°–ü–†–û–ò–ó–í–ï–î–ï–ù–ò–ï –°–¶–ï–ù–ê–†–ò–Ø –ò–ó –°–ö–†–ò–ù–®–û–¢–ê")
    print("=" * 50)
    
    system = CreativeNamingSystem(save_to_file=False)
    
    # –ö–æ–¥–∏—Ä—É–µ–º –∫–∞–∫ –≤ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ
    print("üîê –ö–æ–¥–∏—Ä—É–µ–º: FR_plinko_watafak_ogo_1")
    result = system.encode_creative_name("FR_plinko_watafak_ogo_1", 3)
    if 'error' not in result:
        short_code = result['external']
        print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {short_code}")
        print(f"   (–¥–ª–∏–Ω–Ω—ã–π –∫–æ–¥ —Å–ø—Ä—è—Ç–∞–Ω)")
        
        # –¢–µ–ø–µ—Ä—å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ–º
        print(f"\nüîì –†–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ–º: {short_code}")
        decode_result = system.decode_creative_name(short_code)
        if decode_result['success']:
            print(f"‚úÖ {short_code} -> {decode_result['decoded_name']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {decode_result.get('error')}")
            
        print(f"\nüîì –†–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ–º —Å .mp4: {short_code}.mp4")
        decode_result_mp4 = system.decode_creative_name(short_code + ".mp4")
        if decode_result_mp4['success']:
            print(f"‚úÖ {short_code}.mp4 -> {decode_result_mp4['decoded_name']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {decode_result_mp4.get('error')}")

if __name__ == "__main__":
    test_improved_system()
    test_scenario_from_screenshot()
